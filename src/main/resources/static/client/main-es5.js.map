{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/car-edit/car-edit.component.ts","webpack:///src/app/car-edit/car-edit.component.html","webpack:///src/app/car-list/car-list.component.ts","webpack:///src/app/car-list/car-list.component.html","webpack:///src/app/shared/car/car.service.ts","webpack:///src/app/shared/giphy/giphy.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CarEditComponent","route","router","carService","giphyService","car","sub","params","subscribe","get","href","_links","self","name","url","giphyUrl","console","log","gotoList","unsubscribe","navigate","form","save","result","error","remove","CarListComponent","getAll","data","cars","CarService","http","API","CAR_API","put","post","providedIn","GiphyService","giphyApi","searchTerm","apiLink","pipe","response","length","images","original","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CarListComponent } from './car-list/car-list.component';\nimport { CarEditComponent } from './car-edit/car-edit.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/car-list', pathMatch: 'full' },\n  {\n    path: 'car-list',\n    component: CarListComponent\n  },\n  {\n    path: 'car-add',\n    component: CarEditComponent\n  },\n  {\n    path: 'car-edit/:id',\n    component: CarEditComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<mat-toolbar color=\"primary\">\n  <span>Welcome to {{title}}!</span>\n</mat-toolbar>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CarListComponent } from './car-list/car-list.component';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CarEditComponent } from './car-edit/car-edit.component';\n\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CarListComponent,\n    CarEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatInputModule,\n    MatListModule,\n    MatToolbarModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CarService } from '../shared/car/car.service';\nimport { GiphyService } from '../shared/giphy/giphy.service';\nimport { NgForm } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-car-edit',\n  templateUrl: './car-edit.component.html',\n  styleUrls: ['./car-edit.component.css']\n})\nexport class CarEditComponent implements OnInit, OnDestroy {\n\n  car: any = {};\n\n  sub: Subscription;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private carService: CarService,\n              private giphyService: GiphyService) { }\n\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params => {\n      const id = params['id'];\n      if (id) {\n        this.carService.get(id).subscribe((car: any) => {\n          if (car) {\n            this.car = car;\n            this.car.href = car._links.self.href;\n            this.giphyService.get(car.name).subscribe(url => car.giphyUrl = url);\n          } else {\n            console.log(`Car with id '${id}' not found, returning to list`);\n            this.gotoList();\n          }\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  gotoList() {\n    this.router.navigate(['/car-list']);\n  }\n\n  save(form: NgForm) {\n    this.carService.save(form).subscribe(result => {\n      this.gotoList();\n    }, error => console.error(error));\n  }\n\n  remove(href) {\n    this.carService.remove(href).subscribe(result => {\n      this.gotoList();\n    }, error => console.error(error));\n  }\n\n}\n","<mat-card>\n  <form #carForm=\"ngForm\" (ngSubmit)=\"save(carForm.value)\">\n    <mat-card-header>\n      <mat-card-title><h2>{{car.name ? 'Edit' : 'Add'}} Car</h2></mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <input type=\"hidden\" name=\"href\" [(ngModel)]=\"car.href\">\n      <mat-form-field>\n        <input matInput placehodler=\"Car Name\" [(ngModel)]=\"car.name\"\n               required name=\"name\" #name>\n      </mat-form-field>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-raised-button color=\"primary\" type=\"submit\"\n              [disabled]=\"!carForm.form.valid\">Save</button>\n      <button mat-raised-button color=\"secondary\" (click)=\"remove(car.href)\"\n              **ngIf=\"car.href\" type=\"button\">Delete</button>\n      <a mat-button routerLink=\"/car-list\">Cancel</a>\n    </mat-card-actions>\n    <mat-card-footer>\n      <div class=\"giphy\">\n        <img src=\"{{car.giphyUrl}}\" alt=\"{{car.name}}\">\n      </div>\n    </mat-card-footer>\n  </form>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { CarService } from '../shared/car/car.service'\nimport { GiphyService } from '../shared/giphy/giphy.service'\n\n@Component({\n  selector: 'app-car-list',\n  templateUrl: './car-list.component.html',\n  styleUrls: ['./car-list.component.css']\n})\nexport class CarListComponent implements OnInit {\n\n  cars: Array<any>;\n\n  constructor(private carService: CarService, private giphyService: GiphyService) { }\n\n  ngOnInit() {\n    this.carService.getAll().subscribe(data => {\n      this.cars = data;\n      for (const car of this.cars) {\n        this.giphyService.get(car.name).subscribe(url => car.giphyUrl = url);\n      }\n    });\n  }\n\n}\n","<mat-card>\n  <mat-card-title>Car List</mat-card-title>\n  <mat-card-content>\n    <mat-list>\n      <mat-list-item *ngFor=\"let car of cars\">\n        <img mat-list-avatar src=\"{{car.giphyUrl}}\" alt=\"{{car.name}}\">\n        <h3 mat-line>\n          <a mat-button [routerLink]=\"['/car-edit', car.id]\">{{car.name}}</a>\n        </h3>\n      </mat-list-item>\n    </mat-list>\n  </mat-card-content>\n\n  <button mat-fab color=\"primary\" [routerLink]=\"['/car-add']\">Add</button>\n</mat-card>>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CarService {\n\n  public API = '//localhost:8080';\n  public CAR_API = this.API + '/cars';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAll(): Observable<any> {\n    return this.http.get(this.API + '/cool-cars');\n  }\n\n  get(id: string) {\n    return this.http.get(this.CAR_API + '/' + id);\n  }\n\n  save(car: any): Observable<any> {\n    let result: Observable<any>;\n    if (car['href']) {\n      result = this.http.put(car.href, car);\n    } else {\n      result = this.http.post(this.CAR_API, car);\n    }\n    return result;\n  }\n\n  remove(href: string) {\n    return this.http.delete(href);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({providedIn: 'root'})\n// http://tutorials.pluralsight.com/front-end-javascript/getting-started-with-angular-2-by-building-a-giphy-search-application\nexport class GiphyService {\n\n  // Public beta key: https://github.com/Giphy/GiphyAPI#public-beta-key\n  giphyApi = '//api.giphy.com/v1/gifs/search?api_key=dc6zaTOxFJmzC&limit=1&q=';\n\n  constructor(public http: HttpClient) {\n  }\n\n  get(searchTerm) {\n    const apiLink = this.giphyApi + searchTerm;\n    return this.http.get(apiLink).pipe(map((response: any) => {\n      if (response.data.length > 0) {\n        return response.data[0].images.original.url;\n      } else {\n        return 'https://media.giphy.com/media/YaOxRsmrv9IeA/giphy.gif'; // dancing cat for 404\n      }\n    }));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}